//go:build !ignore_autogenerated_conversions
// +build !ignore_autogenerated_conversions

/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	v2 "rejekts-demo/api/v2"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*User)(nil), (*v2.User)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_User_To_v2_User(a.(*User), b.(*v2.User), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v2.User)(nil), (*User)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_User_To_v1_User(a.(*v2.User), b.(*User), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UserList)(nil), (*v2.UserList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_UserList_To_v2_UserList(a.(*UserList), b.(*v2.UserList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v2.UserList)(nil), (*UserList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_UserList_To_v1_UserList(a.(*v2.UserList), b.(*UserList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UserSpec)(nil), (*v2.UserSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_UserSpec_To_v2_UserSpec(a.(*UserSpec), b.(*v2.UserSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v2.UserSpec)(nil), (*UserSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_UserSpec_To_v1_UserSpec(a.(*v2.UserSpec), b.(*UserSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UserStatus)(nil), (*v2.UserStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_UserStatus_To_v2_UserStatus(a.(*UserStatus), b.(*v2.UserStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v2.UserStatus)(nil), (*UserStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_UserStatus_To_v1_UserStatus(a.(*v2.UserStatus), b.(*UserStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_User_To_v2_User(in *User, out *v2.User, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_UserSpec_To_v2_UserSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_UserStatus_To_v2_UserStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_User_To_v2_User is an autogenerated conversion function.
func Convert_v1_User_To_v2_User(in *User, out *v2.User, s conversion.Scope) error {
	return autoConvert_v1_User_To_v2_User(in, out, s)
}

func autoConvert_v2_User_To_v1_User(in *v2.User, out *User, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v2_UserSpec_To_v1_UserSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v2_UserStatus_To_v1_UserStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v2_User_To_v1_User is an autogenerated conversion function.
func Convert_v2_User_To_v1_User(in *v2.User, out *User, s conversion.Scope) error {
	return autoConvert_v2_User_To_v1_User(in, out, s)
}

func autoConvert_v1_UserList_To_v2_UserList(in *UserList, out *v2.UserList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v2.User, len(*in))
		for i := range *in {
			if err := Convert_v1_User_To_v2_User(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_UserList_To_v2_UserList is an autogenerated conversion function.
func Convert_v1_UserList_To_v2_UserList(in *UserList, out *v2.UserList, s conversion.Scope) error {
	return autoConvert_v1_UserList_To_v2_UserList(in, out, s)
}

func autoConvert_v2_UserList_To_v1_UserList(in *v2.UserList, out *UserList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			if err := Convert_v2_User_To_v1_User(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v2_UserList_To_v1_UserList is an autogenerated conversion function.
func Convert_v2_UserList_To_v1_UserList(in *v2.UserList, out *UserList, s conversion.Scope) error {
	return autoConvert_v2_UserList_To_v1_UserList(in, out, s)
}

func autoConvert_v1_UserSpec_To_v2_UserSpec(in *UserSpec, out *v2.UserSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Age = in.Age
	// WARNING: in.PassportNumber requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v2_UserSpec_To_v1_UserSpec(in *v2.UserSpec, out *UserSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Age = in.Age
	// WARNING: in.PassportDetail requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1_UserStatus_To_v2_UserStatus(in *UserStatus, out *v2.UserStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1_UserStatus_To_v2_UserStatus is an autogenerated conversion function.
func Convert_v1_UserStatus_To_v2_UserStatus(in *UserStatus, out *v2.UserStatus, s conversion.Scope) error {
	return autoConvert_v1_UserStatus_To_v2_UserStatus(in, out, s)
}

func autoConvert_v2_UserStatus_To_v1_UserStatus(in *v2.UserStatus, out *UserStatus, s conversion.Scope) error {
	return nil
}

// Convert_v2_UserStatus_To_v1_UserStatus is an autogenerated conversion function.
func Convert_v2_UserStatus_To_v1_UserStatus(in *v2.UserStatus, out *UserStatus, s conversion.Scope) error {
	return autoConvert_v2_UserStatus_To_v1_UserStatus(in, out, s)
}
